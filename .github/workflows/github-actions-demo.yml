name: Node.js CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
     matrix:
      node-version: [16.x, 18.x, 20.x]
    steps:
      - uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm install

      - name: Test
        run: npm test
      # - name: Coverage
      #   run: npm test:coverage

# jobs:
#   build:
#     # <!-- This is a YAML comment for use in annotated code examples. -->
# # You can run this workflow using a different operating systems.

# # The starter workflow configures jobs to run on Linux, using the GitHub-hosted `ubuntu-latest` runners. You can change the `runs-on` key to run your jobs on a different operating system.
# #
# # For example, you can use the GitHub-hosted Windows runners by specifying `runs-on: windows-latest`. Or, you can run on the GitHub-hosted macOS runners using `runs-on: macos-latest`.
# #
# # You can also run jobs in Docker containers, or you can provide a self-hosted runner that runs on your own infrastructure. For more information, see "[AUTOTITLE](/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idruns-on)."
#     runs-on: ubuntu-latest

#     # This job uses a matrix strategy to run the job four times, once for each specified Node version. For more information, see "[AUTOTITLE](/actions/using-jobs/using-a-matrix-for-your-jobs)."
#     strategy:
#       matrix:
#         node-version: [16.x, 18.x, 20.x]
# #
#     steps:
#       # This step uses the `actions/checkout` action to download a copy of your repository on the runner.
#       - uses: actions/checkout@v3
#       # This step uses the `actions/setup-node` action to set up Node.js for each version indicated by the `matrix.node-version` key above.
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}
#       # This step runs `npm ci` to install any dependencies listed in your `package.json` file.
#       - run: npm i
#       # This step runs the `build` script if there is one specified under the `scripts` key in your `package.json` file.
#       # - run: npm run build --if-present
#       # This step runs the `test` script that is specified under the `scripts` key in your `package.json` file.

#   unitTest:
#     runs-on: ubuntu-latest
#     needs: build
#     strategy:
#       matrix:
#         node-version: [16.x, 18.x, 20.x]
# #
#     steps:
#       # This step uses the `actions/checkout` action to download a copy of your repository on the runner.
#       - uses: actions/checkout@v3
#       # This step uses the `actions/setup-node` action to set up Node.js for each version indicated by the `matrix.node-version` key above.
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}
#       - run: npm i 
#       - run: npm test

#   coverage:
#     runs-on: ubuntu-latest
#     needs: unitTest
#     strategy:
#       matrix:
#         node-version: [16.x, 18.x, 20.x]
# #
#     steps:
#       # This step uses the `actions/checkout` action to download a copy of your repository on the runner.
#       - uses: actions/checkout@v3
#       # This step uses the `actions/setup-node` action to set up Node.js for each version indicated by the `matrix.node-version` key above.
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}
#       - run: npm i 
#       - run: npm test:coverage

      
